
## <summary>policy for xonotic</summary>

########################################
## <summary>
##	Execute xonotic_exec_t in the xonotic domain.
## </summary>
## <param name="domain">
## <summary>
##	Domain allowed to transition.
## </summary>
## </param>
#
interface(`xonotic_domtrans',`
	gen_require(`
		type xonotic_t, xonotic_exec_t;
	')

	corecmd_search_bin($1)
	domtrans_pattern($1, xonotic_exec_t, xonotic_t)
')

######################################
## <summary>
##	Execute xonotic in the caller domain.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xonotic_exec',`
	gen_require(`
		type xonotic_exec_t;
	')

	corecmd_search_bin($1)
	can_exec($1, xonotic_exec_t)
')
########################################
## <summary>
##	Read xonotic PID files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xonotic_read_pid_files',`
	gen_require(`
		type xonotic_var_run_t;
	')

	files_search_pids($1)
	read_files_pattern($1, xonotic_var_run_t, xonotic_var_run_t)
')


########################################
## <summary>
##	All of the rules required to administrate
##	an xonotic environment
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <param name="role">
##	<summary>
##	Role allowed access.
##	</summary>
## </param>
## <rolecap/>
#
interface(`xonotic_admin',`
	gen_require(`
		type xonotic_t;
		type xonotic_runtime_t;
		type xonotic_file_t;
	')

	allow $1 xonotic_t:process { signal_perms };
	ps_process_pattern($1, xonotic_t)

    tunable_policy(`deny_ptrace',`',`
        allow $1 xonotic_t:process ptrace;
    ')

	files_search_pids($1)
	admin_pattern($1, xonotic_runtime_t)
	admin_pattern($1, xonotic_file_t)
	optional_policy(`
		systemd_passwd_agent_exec($1)
		systemd_read_fifo_file_passwd_run($1)
	')
')
